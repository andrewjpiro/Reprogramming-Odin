// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
DoubleSolenoid* RobotMap::pneumaticsHood = NULL;
DoubleSolenoid* RobotMap::pneumaticsBayDoors = NULL;
DoubleSolenoid* RobotMap::pneumaticsShifter = NULL;
CANJaguar* RobotMap::shooterShooter1 = NULL;
CANJaguar* RobotMap::shooterShooter2 = NULL;
Encoder* RobotMap::shooterShootEncoder = NULL;
CANJaguar* RobotMap::intakeIntakeMotor = NULL;
CANJaguar* RobotMap::bADDeployLeft = NULL;
CANJaguar* RobotMap::bADDeployRight = NULL;
CANJaguar* RobotMap::bETCConveyor = NULL;
DigitalInput* RobotMap::bETCFrontLS = NULL;
DigitalInput* RobotMap::bETCMiddleLS = NULL;
DigitalInput* RobotMap::bETCBackLS = NULL;
CANJaguar* RobotMap::driveTrainFrontLeft = NULL;
CANJaguar* RobotMap::driveTrainFrontRight = NULL;
CANJaguar* RobotMap::driveTrainRearLeft = NULL;
CANJaguar* RobotMap::driveTrainRearRight = NULL;
RobotDrive* RobotMap::driveTrainRobotDrive41 = NULL;
Encoder* RobotMap::driveTrainLeftDriveEncoder = NULL;
Encoder* RobotMap::driveTrainRightDriveEncoder = NULL;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();

	pneumaticsHood = new DoubleSolenoid(1, 3, 4);      
	
	
	pneumaticsBayDoors = new DoubleSolenoid(1, 5, 6);      
	
	
	pneumaticsShifter = new DoubleSolenoid(1, 7, 8);      
	
	
	shooterShooter1 = new CANJaguar(2);
	
	
	shooterShooter2 = new CANJaguar(3);
	
	
	shooterShootEncoder = new Encoder(1, 1, 1, 2, false, Encoder::k4X);
	lw->AddSensor("Shooter", "ShootEncoder", shooterShootEncoder);
	shooterShootEncoder->SetDistancePerPulse(1.0);
        shooterShootEncoder->SetPIDSourceParameter(Encoder::kRate);
        shooterShootEncoder->Start();
	intakeIntakeMotor = new CANJaguar(4);
	
	
	bADDeployLeft = new CANJaguar(5);
	
	
	bADDeployRight = new CANJaguar(6);
	
	
	bETCConveyor = new CANJaguar(7);
	
	
	bETCFrontLS = new DigitalInput(1, 7);
	lw->AddSensor("BETC", "FrontLS", bETCFrontLS);
	
	bETCMiddleLS = new DigitalInput(1, 8);
	lw->AddSensor("BETC", "MiddleLS", bETCMiddleLS);
	
	bETCBackLS = new DigitalInput(1, 9);
	lw->AddSensor("BETC", "BackLS", bETCBackLS);
	
	driveTrainFrontLeft = new CANJaguar(11);
	
	
	driveTrainFrontRight = new CANJaguar(10);
	
	
	driveTrainRearLeft = new CANJaguar(8);
	
	
	driveTrainRearRight = new CANJaguar(9);
	
	
	driveTrainRobotDrive41 = new RobotDrive(driveTrainFrontLeft, driveTrainRearLeft,
              driveTrainFrontRight, driveTrainRearRight);
	
	driveTrainRobotDrive41->SetSafetyEnabled(true);
        driveTrainRobotDrive41->SetExpiration(0.1);
        driveTrainRobotDrive41->SetSensitivity(0.5);
        driveTrainRobotDrive41->SetMaxOutput(1.0);

	driveTrainLeftDriveEncoder = new Encoder(1, 3, 1, 4, false, Encoder::k4X);
	lw->AddSensor("DriveTrain", "LeftDriveEncoder", driveTrainLeftDriveEncoder);
	driveTrainLeftDriveEncoder->SetDistancePerPulse(1.0);
        driveTrainLeftDriveEncoder->SetPIDSourceParameter(Encoder::kRate);
        driveTrainLeftDriveEncoder->Start();
	driveTrainRightDriveEncoder = new Encoder(1, 5, 1, 6, false, Encoder::k4X);
	lw->AddSensor("DriveTrain", "RightDriveEncoder", driveTrainRightDriveEncoder);
	driveTrainRightDriveEncoder->SetDistancePerPulse(1.0);
        driveTrainRightDriveEncoder->SetPIDSourceParameter(Encoder::kRate);
        driveTrainRightDriveEncoder->Start();

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
